BeliefUpdates:
  { true }  SetAssigned(POS, X)  { assigned(POS, X) }
  { true }  RemoveAssigned(POS, X) 	{ not assigned(POS, X) }
  { true }  SetDealer(X)  { dealer(X) }
  { not currentturn(_) }  UpdateTrun(X)  { currentturn(X) }
  { currentturn(X) }  RemoveTrun(X)  { not currentturn(X) }

Beliefs:
  gatekeeper(gk).		/* we know who the gatekeeper is, for simplicity */
  dealer(d).
  currentturn(1).   /* the first turn is for the agent in postion 1 */
  

Plans:
  @cardtable(enterAsNotary())	/* join the game as notary */

PC-rules:
  message(X, inform, _, _, registered(POS, Y)) <- true |
  {
    SetAssigned(POS, Y);	/* update belief about assigned sit */
    if B( POS = 4 ) then	/* if we believe we already assigned all the sits, then choose the dealer */
    { 
      /*@cardtable(chooseDealer(), D);*/
      /*SetDealer(D);*/
      send(d, inform, dealer(d))
    }
  }
  
  message(X, inform, _, _, askfor(Pos)) <- true |
  {
    B(assigned(Pos, Y));
    send(X, inform, is(Y))
  }

  turnended () <- currentturn(X) | /**/
  {
    if B( X = 4 ) then
    {
      RemoveTrun(X);
      UpdateTrun(0);
      @cardtale(selectTrun(0))
    }
    else
    {
      RemoveTrun(X);
      UpdateTrun(X + 1);
      @cardtale(selectTrun(X + 1))
    }
  }